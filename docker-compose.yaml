version: '3'

services:
  frontend:
    image: ogdmerlin/hng-stage2:latest  # Replace with your Docker Hub image
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`your-domain.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/app_db
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=(Host(`your-domain.com`) && PathPrefix(`/api`) || PathPrefix(`/docs`))"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.your-domain.com`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"

  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`proxy.your-domain.com`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

volumes:
  postgres_data: